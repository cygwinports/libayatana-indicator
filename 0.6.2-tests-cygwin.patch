--- origsrc/libayatana-indicator-0.6.2/tests/Makefile.am	2018-03-20 04:40:49.000000000 -0500
+++ src/libayatana-indicator-0.6.2/tests/Makefile.am	2018-04-23 12:58:03.088318300 -0500
@@ -10,7 +10,7 @@ XFAIL_TESTS =
 
 check_PROGRAMS = 
 
-lib_LTLIBRARIES = \
+check_LTLIBRARIES = \
 	libdummy-indicator-blank.la \
 	libdummy-indicator-null.la \
 	libdummy-indicator-signaler.la \
@@ -45,7 +45,7 @@ test_loader_CFLAGS = \
 
 test_loader_LDADD = \
 	$(LIBINDICATOR_LIBS) \
-	-L$(top_builddir)/libayatana-indicator/.libs \
+	-L$(top_builddir)/libayatana-indicator \
 	$(INDICATOR_LIB)
 
 #############################
@@ -65,13 +65,13 @@ test_desktop_shortcuts_CFLAGS = \
 
 test_desktop_shortcuts_LDADD = \
 	$(LIBINDICATOR_LIBS) \
-	-L$(top_builddir)/libayatana-indicator/.libs \
+	-L$(top_builddir)/libayatana-indicator \
 	$(INDICATOR_LIB)
 
 DS_XML_REPORT  = desktop-shortcuts-check-results.xml
 DS_HTML_REPORT = desktop-shortcuts-check-results.html
 
-test-desktop-shortcuts-tester: test-desktop-shortcuts Makefile.am
+test-desktop-shortcuts-tester: test-desktop-shortcuts$(EXEEXT) Makefile.am
 	@echo "#!/bin/bash" > $@
 	@echo $(XVFB_RUN) >> $@
 	@echo gtester -k --verbose -o=$(XML_REPORT) ./test-desktop-shortcuts >> $@
@@ -97,10 +97,12 @@ libdummy_indicator_blank_la_CFLAGS = \
 
 libdummy_indicator_blank_la_LIBADD = \
 	$(LIBINDICATOR_LIBS) \
-	-L$(top_builddir)/libayatana-indicator/.libs \
+	-L$(top_builddir)/libayatana-indicator \
 	$(INDICATOR_LIB)
 
 libdummy_indicator_blank_la_LDFLAGS = \
+	-rpath $(abs_builddir) \
+	-no-undefined \
 	-module \
 	-avoid-version
 
@@ -117,10 +119,12 @@ libdummy_indicator_null_la_CFLAGS = \
 
 libdummy_indicator_null_la_LIBADD = \
 	$(LIBINDICATOR_LIBS) \
-	-L$(top_builddir)/libayatana-indicator/.libs \
+	-L$(top_builddir)/libayatana-indicator \
 	$(INDICATOR_LIB)
 
 libdummy_indicator_null_la_LDFLAGS = \
+	-rpath $(abs_builddir) \
+	-no-undefined \
 	-module \
 	-avoid-version
 
@@ -137,10 +141,12 @@ libdummy_indicator_signaler_la_CFLAGS =
 
 libdummy_indicator_signaler_la_LIBADD = \
 	$(LIBINDICATOR_LIBS) \
-	-L$(top_builddir)/libayatana-indicator/.libs \
+	-L$(top_builddir)/libayatana-indicator \
 	$(INDICATOR_LIB)
 
 libdummy_indicator_signaler_la_LDFLAGS = \
+	-rpath $(abs_builddir) \
+	-no-undefined \
 	-module \
 	-avoid-version
 
@@ -157,10 +163,12 @@ libdummy_indicator_simple_la_CFLAGS = \
 
 libdummy_indicator_simple_la_LIBADD = \
 	$(LIBINDICATOR_LIBS) \
-	-L$(top_builddir)/libayatana-indicator/.libs \
+	-L$(top_builddir)/libayatana-indicator \
 	$(INDICATOR_LIB)
 
 libdummy_indicator_simple_la_LDFLAGS = \
+	-rpath $(abs_builddir) \
+	-no-undefined \
 	-module \
 	-avoid-version
 
@@ -178,10 +186,12 @@ libdummy_indicator_entry_func_la_CFLAGS
 
 libdummy_indicator_entry_func_la_LIBADD = \
 	$(LIBINDICATOR_LIBS) \
-	-L$(top_builddir)/libayatana-indicator/.libs \
+	-L$(top_builddir)/libayatana-indicator \
 	$(INDICATOR_LIB)
 
 libdummy_indicator_entry_func_la_LDFLAGS = \
+	-rpath $(abs_builddir) \
+	-no-undefined \
 	-module \
 	-avoid-version
 
@@ -198,10 +208,12 @@ libdummy_indicator_visible_la_CFLAGS = \
 
 libdummy_indicator_visible_la_LIBADD = \
 	$(LIBINDICATOR_LIBS) \
-	-L$(top_builddir)/libayatana-indicator/.libs \
+	-L$(top_builddir)/libayatana-indicator \
 	$(INDICATOR_LIB)
 
 libdummy_indicator_visible_la_LDFLAGS = \
+	-rpath $(abs_builddir) \
+	-no-undefined \
 	-module \
 	-avoid-version
 
@@ -220,7 +232,7 @@ service_shutdown_timeout_CFLAGS = \
 
 service_shutdown_timeout_LDADD = \
 	$(LIBINDICATOR_LIBS) \
-	-L$(top_builddir)/libayatana-indicator/.libs \
+	-L$(top_builddir)/libayatana-indicator \
 	$(INDICATOR_LIB)
 
 service-shutdown-timeout-tester: service-shutdown-timeout Makefile
@@ -246,7 +258,7 @@ service_manager_no_connect_CFLAGS = \
 
 service_manager_no_connect_LDADD = \
 	$(LIBINDICATOR_LIBS) \
-	-L$(top_builddir)/libayatana-indicator/.libs \
+	-L$(top_builddir)/libayatana-indicator \
 	$(INDICATOR_LIB)
 
 service-manager-no-connect-tester: service-manager-no-connect Makefile.am
@@ -278,7 +290,7 @@ service_manager_connect_CFLAGS = \
 
 service_manager_connect_LDADD = \
 	$(LIBINDICATOR_LIBS) \
-	-L$(top_builddir)/libayatana-indicator/.libs \
+	-L$(top_builddir)/libayatana-indicator \
 	$(INDICATOR_LIB)
 
 check_PROGRAMS += service-manager-connect-service
@@ -292,7 +304,7 @@ service_manager_connect_service_CFLAGS =
 
 service_manager_connect_service_LDADD = \
 	$(LIBINDICATOR_LIBS) \
-	-L$(top_builddir)/libayatana-indicator/.libs \
+	-L$(top_builddir)/libayatana-indicator \
 	$(INDICATOR_LIB)
 
 service-manager-connect-tester: service-manager-connect service-manager-connect-service session.conf service-manager-connect.service Makefile.am
@@ -325,7 +337,7 @@ service_version_manager_CFLAGS = \
 
 service_version_manager_LDADD = \
 	$(LIBINDICATOR_LIBS) \
-	-L$(top_builddir)/libayatana-indicator/.libs \
+	-L$(top_builddir)/libayatana-indicator \
 	$(INDICATOR_LIB)
 
 check_PROGRAMS += service-version-bad-service
@@ -340,7 +352,7 @@ service_version_bad_service_CFLAGS = \
 
 service_version_bad_service_LDADD = \
 	$(LIBINDICATOR_LIBS) \
-	-L$(top_builddir)/libayatana-indicator/.libs \
+	-L$(top_builddir)/libayatana-indicator \
 	$(INDICATOR_LIB)
 
 check_PROGRAMS += service-version-good-service
@@ -355,7 +367,7 @@ service_version_good_service_CFLAGS = \
 
 service_version_good_service_LDADD = \
 	$(LIBINDICATOR_LIBS) \
-	-L$(top_builddir)/libayatana-indicator/.libs \
+	-L$(top_builddir)/libayatana-indicator \
 	$(INDICATOR_LIB)
 
 service-version-tester: service-version-manager service-version-bad-service service-version-good-service session.conf service-version-bad.service service-version-good.service Makefile.am
@@ -382,7 +394,7 @@ service_version_multiwatch_manager_CFLAG
 
 service_version_multiwatch_manager_LDADD = \
 	$(LIBINDICATOR_LIBS) \
-	-L$(top_builddir)/libayatana-indicator/.libs \
+	-L$(top_builddir)/libayatana-indicator \
 	$(INDICATOR_LIB)
 
 check_PROGRAMS += service-version-multiwatch-manager-impolite
@@ -397,7 +409,7 @@ service_version_multiwatch_manager_impol
 
 service_version_multiwatch_manager_impolite_LDADD = \
 	$(LIBINDICATOR_LIBS) \
-	-L$(top_builddir)/libayatana-indicator/.libs \
+	-L$(top_builddir)/libayatana-indicator \
 	$(INDICATOR_LIB)
 
 check_PROGRAMS += service-version-multiwatch-service
@@ -412,7 +424,7 @@ service_version_multiwatch_service_CFLAG
 
 service_version_multiwatch_service_LDADD = \
 	$(LIBINDICATOR_LIBS) \
-	-L$(top_builddir)/libayatana-indicator/.libs \
+	-L$(top_builddir)/libayatana-indicator \
 	$(INDICATOR_LIB)
 
 service-version-multiwatch-tester: service-version-multiwatch-manager service-version-multiwatch-service service-version-multiwatch-manager-impolite Makefile.am
@@ -438,7 +450,7 @@ service_manager_nostart_connect_CFLAGS =
 
 service_manager_nostart_connect_LDADD = \
 	$(LIBINDICATOR_LIBS) \
-	-L$(top_builddir)/libayatana-indicator/.libs \
+	-L$(top_builddir)/libayatana-indicator \
 	$(INDICATOR_LIB)
 
 service-manager-connect-nostart-tester: service-manager-nostart-connect service-manager-connect-service Makefile.am
@@ -456,7 +468,7 @@ DISTCLEANFILES += service-manager-connec
 XML_REPORT  = loader-check-results.xml
 HTML_REPORT = loader-check-results.html
 
-loader-tester: test-loader libdummy-indicator-null.la libdummy-indicator-simple.la libdummy-indicator-entry-func.la Makefile
+loader-tester: test-loader$(EXEEXT) libdummy-indicator-null.la libdummy-indicator-simple.la libdummy-indicator-entry-func.la Makefile
 	@echo "#!/bin/bash" > loader-tester
 	@echo $(XVFB_RUN) >> $@
 	@echo gtester -k --verbose -o=$(XML_REPORT) ./test-loader >> loader-tester
@@ -489,7 +501,7 @@ test_indicator_ng_CFLAGS = \
 
 test_indicator_ng_LDADD = \
 	$(LIBINDICATOR_LIBS) \
-	-L$(top_builddir)/libayatana-indicator/.libs \
+	-L$(top_builddir)/libayatana-indicator \
 	$(INDICATOR_LIB)
 
 TESTS += test-indicator-ng
--- origsrc/libayatana-indicator-0.6.2/tests/test-loader.c	2018-03-20 04:40:49.000000000 -0500
+++ src/libayatana-indicator-0.6.2/tests/test-loader.c	2018-04-23 12:59:06.712011000 -0500
@@ -47,7 +47,7 @@ entry_func_swap (IndicatorObject * io)
 void
 test_loader_entry_func_window (void)
 {
-	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/libdummy-indicator-entry-func.so");
+	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/cygdummy-indicator-entry-func.dll");
 	g_assert(object != NULL);
 
 	DummyIndicatorEntryFunc * entryfunc = (DummyIndicatorEntryFunc *)(object);
@@ -72,7 +72,7 @@ test_loader_entry_func_window (void)
 void
 test_loader_entry_funcs (void)
 {
-	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/libdummy-indicator-entry-func.so");
+	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/cygdummy-indicator-entry-func.dll");
 	g_assert(object != NULL);
 
 	DummyIndicatorEntryFunc * entryfunc = (DummyIndicatorEntryFunc *)(object);
@@ -115,7 +115,7 @@ entry_move_cb (IndicatorObject * io, Ind
 void
 test_loader_filename_dummy_signaler (void)
 {
-	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/libdummy-indicator-signaler.so");
+	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/cygdummy-indicator-signaler.dll");
 	g_assert(object != NULL);
 
 	IndicatorObjectEntry *added_entry, *moved_entry, *removed_entry;
@@ -180,7 +180,7 @@ void
 test_loader_filename_dummy_visible (void)
 {
 	const GQuark is_hidden_quark = g_quark_from_static_string ("is-hidden");
-	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/libdummy-indicator-visible.so");
+	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/cygdummy-indicator-visible.dll");
 	g_assert(object != NULL);
 
 	// create our local parent widgetry
@@ -245,7 +245,7 @@ test_loader_filename_dummy_visible (void
 void
 test_loader_filename_dummy_simple_location (void)
 {
-	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/libdummy-indicator-simple.so");
+	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/cygdummy-indicator-simple.dll");
 	g_assert(object != NULL);
 
 	GList * entries = indicator_object_get_entries(object);
@@ -266,7 +266,7 @@ test_loader_filename_dummy_simple_locati
 void
 test_loader_filename_dummy_simple_accessors (void)
 {
-	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/libdummy-indicator-simple.so");
+	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/cygdummy-indicator-simple.dll");
 	g_assert(object != NULL);
 
 	g_assert(indicator_object_get_entries(object) != NULL);
@@ -279,7 +279,7 @@ test_loader_filename_dummy_simple_access
 void
 test_loader_filename_dummy_simple (void)
 {
-	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/libdummy-indicator-simple.so");
+	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/cygdummy-indicator-simple.dll");
 	g_assert(object != NULL);
 
 	gboolean unreffed = FALSE;
@@ -294,7 +294,7 @@ test_loader_filename_dummy_simple (void)
 void
 test_loader_filename_dummy_blank (void)
 {
-	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/libdummy-indicator-blank.so");
+	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/cygdummy-indicator-blank.dll");
 	g_assert(object == NULL);
 	return;
 }
@@ -302,7 +302,7 @@ test_loader_filename_dummy_blank (void)
 void
 test_loader_filename_dummy_null (void)
 {
-	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/libdummy-indicator-null.so");
+	IndicatorObject * object = indicator_object_new_from_file(BUILD_DIR "/.libs/cygdummy-indicator-null.dll");
 	g_assert(object != NULL);
 	g_assert(indicator_object_get_entries(object) == NULL);
 	g_object_unref(G_OBJECT(object));
@@ -312,7 +312,7 @@ test_loader_filename_dummy_null (void)
 void
 test_loader_filename_bad (void)
 {
-	IndicatorObject * object = indicator_object_new_from_file("/this/file/should/not/exist.so");
+	IndicatorObject * object = indicator_object_new_from_file("/this/file/should/not/exist.dll");
 	g_assert(object == NULL);
 	return;
 }
